name: CI

on:
  push:
    tags:
      - '*'  
    branches:
      - '*'
      
env:
  MMX_TELEGRAM_TO_1: ${{ secrets.MMX_TELEGRAM_TO_1 }}
          
jobs:
  msvc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          
      - name: Upload a Build Artifact to release
        id: attach_to_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./README.md
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          
      - shell: bash
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo ${{ steps.attach_to_release.outputs.browser_download_url }} > download_url.txt
      - name: Upload download_url.txt
        uses: actions/upload-artifact@v3
        with:
          name: download_url
          path: download_url.txt
    
  notify:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [msvc]
    steps:
      - name: Event context
        env:
          EVENT: ${{ toJSON(github.event) }}
        run: |
          echo "$EVENT"
          
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)          
          
      - name: Download download_url.txt
        uses: actions/download-artifact@v3
        with:
          name: download_url
          
      - shell: bash
        run: |
          value=`cat download_url.txt`
          echo $value
          echo "DOWNLOAD_URL=$value" >> $GITHUB_ENV
          
      - name: send telegram message
        if: "${{ env.MMX_TELEGRAM_TO_1 != '' }}"
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MMX_TELEGRAM_TO_1 }}
          token: ${{ secrets.MMX_BOT_TELEGRAM_TOKEN }}
          format: markdown
          message: |
            New *MMX Node* release *${{ steps.get_version.outputs.VERSION }}*
            [Download](${{ env.DOWNLOAD_URL }})
            
            

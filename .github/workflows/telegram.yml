name: CI

on:
  push:
    tags:
      - '*'  
    branches:
      - '*'
      
env:
  IMAGE_NAME: 'gha-test'

  MMX_TELEGRAM_TOKEN: ${{ secrets.MMX_TELEGRAM_TOKEN }} 
  MMX_TELEGRAM_TO_1: ${{ secrets.MMX_TELEGRAM_TO_1 }}
  DISCORD_WEBHOOK: ${{ secrets.MMX_DISCORD_WEBHOOK }}
          
jobs:

  docker:
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest    

  msvc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          
      - name: Upload a Build Artifact to release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./README.md
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
    
  notify:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [msvc]
    steps:

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
        
      - name: Telegram notification
        if: ${{ env.MMX_TELEGRAM_TO_1 != '' }} && ${{ env.MMX_TELEGRAM_TOKEN != '' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.MMX_TELEGRAM_TO_1 }}
          token: ${{ env.MMX_TELEGRAM_TOKEN }}
          format: html
          message: |
            MMX Node release ${{ steps.get_version.outputs.VERSION }}      
            ${{ github.event.repository.url }}/releases/${{ steps.get_version.outputs.VERSION }}
            
            <a href="https://t.me/mmx_node">Telegram channel</a>
            <a href="https://t.me/mmx_node_chat">Telegram chat</a>
            <a href="https://t.me/mmx_node_chat_ru">Telegram chat[RU]</a>
            <a href="https://discord.gg/tCwevssVmY">Discord</a>
            
      - name: Discord notification
        if: ${{ env.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            MMX Node release ${{ steps.get_version.outputs.VERSION }}      
            ${{ github.event.repository.url }}/releases/${{ steps.get_version.outputs.VERSION }}
            
            
            
